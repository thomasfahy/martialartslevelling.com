import "../styles/active-quest.css";
import { getQuestSize } from "./leveling";
import { getQuestColor } from "./leveling";

export async function newActiveQuest() {
    const token = localStorage.getItem("jwtToken");

    if (!token) {
        window.location.href = "/login.html";
        return;
    }

    try {
        const response = await fetch("http://localhost:3000/api/get-active-quest", {
            method: "GET",
            headers: {
                "Authorization": `Bearer ${token}`,
                "Content-Type": "application/json"
            }
        });

        const data = await response.json();

        if (response.ok) {
            if (data.message) {
                console.log(data.message);
            } else {
                console.log("Active Quest:", data);
                createActiveQuestWindow(data);
            }
        } else {
            console.error("Error fetching active quest:", data.message);
        }
    } catch (error) {
        console.error("Network error:", error);
    }
}

function createQuestStepElement(stepName, stepCurrent, stepGoal, stepUnit) {
    const stepContainer = document.createElement("div");
    stepContainer.className = "active-quest-step";

    const checkbox = document.createElement("input");
    checkbox.type = "checkbox";
    checkbox.className = "quest-step-checkbox";

    const stepLabel = document.createElement("label");
    stepLabel.className = "quest-step-label";
    stepLabel.innerHTML = `${stepName}: <span class="progress">${stepCurrent}/${stepGoal}</span> ${stepUnit || ""}`;

    checkbox.addEventListener("change", () => {
        if (checkbox.checked) {
            stepLabel.innerHTML = `${stepName}: <span class="progress">${stepGoal}/${stepGoal}</span> ${stepUnit || ""}`;
        } else {
            stepLabel.innerHTML = `${stepName}: <span class="progress">${stepCurrent}/${stepGoal}</span> ${stepUnit || ""}`;
        }
    });

    stepContainer.appendChild(checkbox);
    stepContainer.appendChild(stepLabel);

    return stepContainer;
}

function appendStatGains(questData, questContainer) {
    const statContainer = document.createElement("div");
    statContainer.className = "stat-gain-container";

    const stats = [
        { name: "Patterns", value: questData.patterns_gain, icon: "🌀", color: "#3498db" },
        { name: "Technique", value: questData.technique_gain, icon: "⚙️", color: "#9b59b6" },
        { name: "Strength", value: questData.strength_gain, icon: "💪", color: "#e74c3c" },
        { name: "Agility", value: questData.agility_gain, icon: "🏃", color: "#2ecc71" },
        { name: "Flexibility", value: questData.flexibility_gain, icon: "🤸", color: "#f39c12" },
        { name: "Combat", value: questData.combat_gain, icon: "⚔️", color: "#e67e22" }
    ];

    stats.forEach(stat => {
        if (stat.value > 0) {
            const statElement = document.createElement("div");
            statElement.className = "quest-stat-gain";
            statElement.innerHTML = `
                <span style="font-size: 1.5em;">${stat.icon}</span>
                <strong style="color: ${stat.color}; margin-left: 5px;">${stat.name}</strong>
                <span style="font-weight: bold; color: ${stat.color}; margin-left: 10px;">+${stat.value}</span>
            `;
            statContainer.appendChild(statElement);
        }
    });

    if (statContainer.children.length > 0) {
        questContainer.appendChild(statContainer);
    }
}


function createActiveQuestWindow(questData) {

    const leftContainer = document.querySelector(".left-container");

    const activeQuestContainer = document.createElement("div");
    activeQuestContainer.classList.add("active-quest-container");

    leftContainer.appendChild(activeQuestContainer);

    const activeQuestWindowTitle = document.createElement("div");
    activeQuestWindowTitle.classList.add("active-quest-window-title");
    activeQuestWindowTitle.textContent = "Active Quest";
    activeQuestContainer.appendChild(activeQuestWindowTitle);

    const activeQuestTitleContainer = document.createElement("div");
    activeQuestTitleContainer.classList.add("active-quest-title-container");
    activeQuestContainer.appendChild(activeQuestTitleContainer);

    const activeQuestTitle = document.createElement("div");
    activeQuestTitle.classList.add("active-quest-title");
    activeQuestTitle.textContent = questData.quest_title;
    activeQuestTitleContainer.appendChild(activeQuestTitle);

    const questStepsContainer = document.createElement("div");
    questStepsContainer.classList.add("active-quest-step-container");
    activeQuestContainer.appendChild(questStepsContainer);

    for (let i = 1; i <= 4; i++) {
        const stepName = questData[`quest_step_name${i}`];
        const stepCurrent = questData[`quest_step_current${i}`];
        const stepGoal = questData[`quest_step_goal${i}`];
        const stepUnit = questData[`quest_step_unit${i}`];
    
        if (stepName) {
            questStepsContainer.appendChild(createQuestStepElement(stepName, stepCurrent, stepGoal, stepUnit));
        }
    }

    const questCompleteButton = document.createElement("button");
    questCompleteButton.classList.add("active-quest-complete-button");
    questCompleteButton.textContent = "Complete";
    questCompleteButton.style.backgroundColor = "#00aaff";

    const questAbandonButton = document.createElement("button");
    questAbandonButton.classList.add("active-quest-abandon-button");
    questAbandonButton.textContent = "Abandon";
    questAbandonButton.style.backgroundColor = "#c0392b";

    const activeQuestButtonContainer = document.createElement("div");
    activeQuestButtonContainer.classList.add("active-quest-button-container");
    activeQuestButtonContainer.appendChild(questAbandonButton);
    activeQuestButtonContainer.appendChild(questCompleteButton);

    appendStatGains(questData, activeQuestContainer);

    activeQuestContainer.appendChild(activeQuestButtonContainer);
}
